import { ColumnAdjustment } from "./columnAdjustment";
import { Color } from "./color";
import { TextRect } from "./textRect";
import { BorderCornerStyle } from "./borderCornerStyle";
import { TableBroken } from "./tableBroken";
import { Row } from "./row";
import { BorderInfo } from "./borderInfo";
import { MarginInfo } from "./marginInfo";
import { TextState } from "./textState";
import { VerticalAlignment } from "./verticalAlignment";
import { HorizontalAlignment } from "./horizontalAlignment";
import { LinkElement } from "./linkElement";
export declare class Table extends LinkElement {
    'alignment': HorizontalAlignment;
    'horizontalAlignment': HorizontalAlignment;
    'verticalAlignment': VerticalAlignment;
    'top': number;
    'left': number;
    'defaultCellTextState': TextState;
    'defaultCellPadding': MarginInfo;
    'border': BorderInfo;
    'margin': MarginInfo;
    'rows': Array<Row>;
    'defaultColumnWidth': string;
    'defaultCellBorder': BorderInfo;
    'broken': TableBroken;
    'columnWidths': string;
    'repeatingRowsCount': number;
    'repeatingColumnsCount': number;
    'repeatingRowsStyle': TextState;
    'cornerStyle': BorderCornerStyle;
    'breakText': TextRect;
    'backgroundColor': Color;
    'isBordersIncluded': boolean;
    'columnAdjustment': ColumnAdjustment;
    'zIndex': number;
    static discriminator: any;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
