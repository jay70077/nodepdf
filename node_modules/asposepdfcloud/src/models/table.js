"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const linkElement_1 = require("./linkElement");
class Table extends linkElement_1.LinkElement {
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Table.attributeTypeMap);
    }
}
Table.discriminator = undefined;
Table.attributeTypeMap = [
    {
        "name": "alignment",
        "baseName": "Alignment",
        "type": "HorizontalAlignment"
    },
    {
        "name": "horizontalAlignment",
        "baseName": "HorizontalAlignment",
        "type": "HorizontalAlignment"
    },
    {
        "name": "verticalAlignment",
        "baseName": "VerticalAlignment",
        "type": "VerticalAlignment"
    },
    {
        "name": "top",
        "baseName": "Top",
        "type": "number"
    },
    {
        "name": "left",
        "baseName": "Left",
        "type": "number"
    },
    {
        "name": "defaultCellTextState",
        "baseName": "DefaultCellTextState",
        "type": "TextState"
    },
    {
        "name": "defaultCellPadding",
        "baseName": "DefaultCellPadding",
        "type": "MarginInfo"
    },
    {
        "name": "border",
        "baseName": "Border",
        "type": "BorderInfo"
    },
    {
        "name": "margin",
        "baseName": "Margin",
        "type": "MarginInfo"
    },
    {
        "name": "rows",
        "baseName": "Rows",
        "type": "Array<Row>"
    },
    {
        "name": "defaultColumnWidth",
        "baseName": "DefaultColumnWidth",
        "type": "string"
    },
    {
        "name": "defaultCellBorder",
        "baseName": "DefaultCellBorder",
        "type": "BorderInfo"
    },
    {
        "name": "broken",
        "baseName": "Broken",
        "type": "TableBroken"
    },
    {
        "name": "columnWidths",
        "baseName": "ColumnWidths",
        "type": "string"
    },
    {
        "name": "repeatingRowsCount",
        "baseName": "RepeatingRowsCount",
        "type": "number"
    },
    {
        "name": "repeatingColumnsCount",
        "baseName": "RepeatingColumnsCount",
        "type": "number"
    },
    {
        "name": "repeatingRowsStyle",
        "baseName": "RepeatingRowsStyle",
        "type": "TextState"
    },
    {
        "name": "cornerStyle",
        "baseName": "CornerStyle",
        "type": "BorderCornerStyle"
    },
    {
        "name": "breakText",
        "baseName": "BreakText",
        "type": "TextRect"
    },
    {
        "name": "backgroundColor",
        "baseName": "BackgroundColor",
        "type": "Color"
    },
    {
        "name": "isBordersIncluded",
        "baseName": "IsBordersIncluded",
        "type": "boolean"
    },
    {
        "name": "columnAdjustment",
        "baseName": "ColumnAdjustment",
        "type": "ColumnAdjustment"
    },
    {
        "name": "zIndex",
        "baseName": "ZIndex",
        "type": "number"
    }
];
exports.Table = Table;
//# sourceMappingURL=table.js.map